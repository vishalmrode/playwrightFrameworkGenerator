'use strict';

var config = require('../../config.js');
var logger = require('../../logger.js');
var reportCrash = require('../../protocol/api/reportCrash.js');
var types = require('../types.js');
var updateRecordingLog = require('../updateRecordingLog.js');

async function uploadCrashedData(client, recording) {
  logger.logInfo("UploadCrashedData:Started", { recordingId: recording.id });
  const crashData = recording.crashData?.slice() ?? [];
  crashData.push({
    kind: "recordingMetadata",
    recordingId: recording.id
  });
  try {
    await Promise.all(crashData.map(async (data) => reportCrash.reportCrash(client, { data })));
    updateRecordingLog.updateRecordingLog(recording, {
      kind: types.RECORDING_LOG_KIND.crashUploaded,
      server: config.replayWsServer
    });
    logger.logInfo("UploadCrashedData:Succeeded", { recording: recording.id });
    recording.uploadStatus = "uploaded";
  } catch (error) {
    logger.logError("UploadCrashedData:Failed", {
      error,
      recordingId: recording.id,
      buildId: recording.buildId
    });
    recording.uploadStatus = "failed";
    recording.uploadError = error;
  }
}

exports.uploadCrashedData = uploadCrashedData;
